<?xml version="1.0"?>
<!--
    Copyright 2015 The Apache Software Foundation.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="antlib:org.apache.tools.ant"
           xmlns:tns="antlib:org.apache.tools.ant"
           version="1.0"
           elementFormDefault="qualified">

    <xs:element name="project">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="tns:target"/>
                <xs:element name="fail" type="tns:failTask"/>
                <xs:element name="condition" type="tns:conditionTask"/>
                <xs:element name="property" type="tns:propertyTask"/>
            </xs:choice>
            <xs:attribute name="basedir" type="xs:string"/>
            <xs:attribute name="default" type="xs:string"/>
            <xs:attribute name="name" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="target">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="tns:tasks"/>
            </xs:choice>
            <xs:attribute name="name" type="xs:string" use="required"/>
            <xs:attribute name="depends" type="xs:string"/>
            <xs:attribute name="if" type="xs:string"/>
            <xs:attribute name="unless" type="xs:string"/>
            <xs:attribute name="description" type="xs:string"/>
            <xs:attribute name="extensionOf" type="xs:string"/>
            <xs:attribute name="onMissingExtensionPoint" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="antTask">
        <xs:sequence>
            <xs:element name="propertyset" type="tns:propertySet"/>
        </xs:sequence>
        <xs:attribute name="antfile" type="xs:string"/>
        <xs:attribute name="dir" type="xs:string"/>
        <xs:attribute name="target" type="xs:string"/>
        <xs:attribute name="output" type="xs:string"/>
        <xs:attribute name="inheritAll" type="xs:string"/>
        <xs:attribute name="inheritRefs" type="xs:string"/>
        <xs:attribute name="useNativeBasedir" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="antcallTask">
        <xs:attribute name="target" type="xs:string" use="required"/>
        <xs:attribute name="inheritAll" type="xs:string"/>
        <xs:attribute name="inheritRefs" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="antversionTask">
        <xs:complexContent>
            <xs:extension base="tns:antversion">
                <xs:attribute name="property" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="availableTask">
        <xs:complexContent>
            <xs:extension base="tns:available">
                <xs:attribute name="property" type="xs:string" use="required"/>
                <xs:attribute name="value" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="basenameTask">
        <xs:attribute name="file" type="xs:string" use="required"/>
        <xs:attribute name="property" type="xs:string" use="required"/>
        <xs:attribute name="suffix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="checksumTask">
        <xs:sequence minOccurs="0">
            <xs:group ref="tns:resourceCollections"/>
        </xs:sequence>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="todir" type="xs:string"/>
        <xs:attribute name="algorithm" type="xs:string"/>
        <xs:attribute name="provider" type="xs:string"/>
        <xs:attribute name="fileext" type="xs:string"/>
        <xs:attribute name="property" type="xs:string"/>
        <xs:attribute name="pattern" type="xs:string"/>
        <xs:attribute name="format" type="xs:string"/>
        <xs:attribute name="totalproperty" type="xs:string"/>
        <xs:attribute name="forceoverwrite" type="xs:string"/>
        <xs:attribute name="verifyproperty" type="xs:string"/>
        <xs:attribute name="readbuffersize" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="conditionTask">
        <xs:group ref="tns:conditions"/>
        <xs:attribute name="property" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="else" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="copyTask">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="tns:resourceCollections"/>
        </xs:sequence>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="preservelastmodified" type="xs:string"/>
        <xs:attribute name="tofile" type="xs:string"/>
        <xs:attribute name="todir" type="xs:string"/>
        <xs:attribute name="overwrite" type="xs:string"/>
        <xs:attribute name="force" type="xs:string"/>
        <xs:attribute name="filtering" type="xs:string"/>
        <xs:attribute name="flatten" type="xs:string"/>
        <xs:attribute name="includeEmptyDirs" type="xs:string"/>
        <xs:attribute name="failonerror" type="xs:string"/>
        <xs:attribute name="quiet" type="xs:string"/>
        <xs:attribute name="verbose" type="xs:string"/>
        <xs:attribute name="encoding" type="xs:string"/>
        <xs:attribute name="outputencoding" type="xs:string"/>
        <xs:attribute name="enablemultiplemappings" type="xs:string"/>
        <xs:attribute name="granularity" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="deleteTask">
        <xs:sequence minOccurs="0">
            <xs:group ref="tns:resourceCollections"/>
        </xs:sequence>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="dir" type="xs:string"/>
        <xs:attribute name="verbose" type="xs:string"/>
        <xs:attribute name="quiet" type="xs:string"/>
        <xs:attribute name="failonerror" type="xs:string"/>
        <xs:attribute name="includeemptydirs" type="xs:string"/>
        <xs:attribute name="deleteonexit" type="xs:string"/>
        <xs:attribute name="followsymlinks" type="xs:string"/>
        <xs:attribute name="removeNotFollowedSymlinks" type="xs:string"/>
        <xs:attribute name="performGCOnFailedDelete" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dirnameTask">
        <xs:attribute name="file" type="xs:string" use="required"/>
        <xs:attribute name="property" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="echoTask">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="message" type="xs:string"/>
                <xs:attribute name="file" type="xs:string"/>
                <xs:attribute name="output" type="xs:string"/>
                <xs:attribute name="append" type="xs:string"/>
                <xs:attribute name="level" type="xs:string"/>
                <xs:attribute name="encoding" type="xs:string"/>
                <xs:attribute name="force" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="failTask" mixed="true">
        <xs:sequence minOccurs="0">
            <xs:element name="condition">
                <xs:complexType>
                    <xs:group ref="tns:conditions"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="message" type="xs:string"/>
        <xs:attribute name="if" type="xs:string"/>
        <xs:attribute name="unless" type="xs:string"/>
        <xs:attribute name="status" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="jarTask">
        <xs:sequence>
            <xs:element name="manifest" type="tns:manifest"/>
        </xs:sequence>
        <xs:attributeGroup ref="tns:patternAttributes"/>
        <xs:attribute name="destfile" type="xs:string" use="required"/>
        <xs:attribute name="basedir" type="xs:string"/>
        <xs:attribute name="compress" type="xs:string"/>
        <xs:attribute name="keepcompression" type="xs:string"/>
        <xs:attribute name="encoding" type="xs:string"/>
        <xs:attribute name="filesonly" type="xs:string"/>
        <xs:attribute name="defaultexcludes" type="xs:string"/>
        <xs:attribute name="manifest" type="xs:string"/>
        <xs:attribute name="filesetmanifest" type="xs:string"/>
        <xs:attribute name="update" type="xs:string"/>
        <xs:attribute name="whenmanifestonly" type="xs:string"/>
        <xs:attribute name="duplicate" type="xs:string"/>
        <xs:attribute name="index" type="xs:string"/>
        <xs:attribute name="indexMetaInf" type="xs:string"/>
        <xs:attribute name="manifestencoding" type="xs:string"/>
        <xs:attribute name="roundup" type="xs:string"/>
        <xs:attribute name="level" type="xs:string"/>
        <xs:attribute name="strict" type="xs:string"/>
        <xs:attribute name="preserve0permissions" type="xs:string"/>
        <xs:attribute name="useLanguageEncodingFlag" type="xs:string"/>
        <xs:attribute name="createUnicodeExtraFields" type="xs:string"/>
        <xs:attribute name="fallbacktoUTF8" type="xs:string"/>
        <xs:attribute name="mergeClassPathAttributes" type="xs:string"/>
        <xs:attribute name="flattenAttributes" type="xs:string"/>
        <xs:attribute name="zip64Mode" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="javaTask">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="jvmarg" type="tns:jvmarg"/>
            <xs:element name="redirector">
                <xs:complexType>
                    <xs:attribute name="output" type="xs:string"/>
                    <xs:attribute name="error" type="xs:string"/>
                    <xs:attribute name="logError" type="xs:string"/>
                    <xs:attribute name="append" type="xs:string"/>
                    <xs:attribute name="createemptyfiles" type="xs:string"/>
                    <xs:attribute name="outputproperty" type="xs:string"/>
                    <xs:attribute name="errorproperty" type="xs:string"/>
                    <xs:attribute name="input" type="xs:string"/>
                    <xs:attribute name="inputstring" type="xs:string"/>
                    <xs:attribute name="inputencoding" type="xs:string"/>
                    <xs:attribute name="outputencoding" type="xs:string"/>
                    <xs:attribute name="errorencoding" type="xs:string"/>
                    <xs:attribute name="alwayslog" type="xs:string"/>
                    <xs:attribute name="loginputstring" type="xs:string"/>
                    <xs:attribute name="binaryOutput" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="classpath">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="path">
                            <xs:complexType>
                                <xs:attribute name="path" type="xs:string"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="syspropertyset" type="tns:propertySet"/>
            <xs:any namespace="##any" processContents="lax"/>
        </xs:choice>
        <xs:attribute name="classname" type="xs:string"/>
        <xs:attribute name="jar" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="fork" type="xs:string"/>
        <xs:attribute name="spawn" type="xs:string"/>
        <xs:attribute name="jvm" type="xs:string"/>
        <xs:attribute name="maxmemory" type="xs:string"/>
        <xs:attribute name="failonerror" type="xs:string"/>
        <xs:attribute name="resultproperty" type="xs:string"/>
        <xs:attribute name="dir" type="xs:string"/>
        <xs:attribute name="output" type="xs:string"/>
        <xs:attribute name="error" type="xs:string"/>
        <xs:attribute name="logError" type="xs:string"/>
        <xs:attribute name="append" type="xs:string"/>
        <xs:attribute name="outputproperty" type="xs:string"/>
        <xs:attribute name="errorproperty" type="xs:string"/>
        <xs:attribute name="input" type="xs:string"/>
        <xs:attribute name="inputstring" type="xs:string"/>
        <xs:attribute name="newenvironment" type="xs:string"/>
        <xs:attribute name="timeout" type="xs:string"/>
        <xs:attribute name="clonevm" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="javacTask">
        <xs:attributeGroup ref="tns:patternAttributes"/>
        <xs:attribute name="srcdir" type="xs:string"/>
        <xs:attribute name="destdir" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="sourcepath" type="xs:string"/>
        <xs:attribute name="bootclasspath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="sourcepathref" type="xs:string"/>
        <xs:attribute name="bootclasspathref" type="xs:string"/>
        <xs:attribute name="extdirs" type="xs:string"/>
        <xs:attribute name="encoding" type="xs:string"/>
        <xs:attribute name="nowarn" type="xs:string"/>
        <xs:attribute name="debug" type="xs:string"/>
        <xs:attribute name="debuglevel" type="xs:string"/>
        <xs:attribute name="optimize" type="xs:string"/>
        <xs:attribute name="deprecation" type="xs:string"/>
        <xs:attribute name="target" type="xs:string"/>
        <xs:attribute name="verbose" type="xs:string"/>
        <xs:attribute name="depend" type="xs:string"/>
        <xs:attribute name="includeAntRuntime" type="xs:string"/>
        <xs:attribute name="includeJavaRuntime" type="xs:string"/>
        <xs:attribute name="fork" type="xs:string"/>
        <xs:attribute name="executable" type="xs:string"/>
        <xs:attribute name="memoryInitialSize" type="xs:string"/>
        <xs:attribute name="memoryMaximumSize" type="xs:string"/>
        <xs:attribute name="failonerror" type="xs:string"/>
        <xs:attribute name="errorProperty" type="xs:string"/>
        <xs:attribute name="source" type="xs:string"/>
        <xs:attribute name="compiler" type="xs:string"/>
        <xs:attribute name="listfiles" type="xs:string"/>
        <xs:attribute name="tempdir" type="xs:string"/>
        <xs:attribute name="updatedProperty" type="xs:string"/>
        <xs:attribute name="includeDestClasses" type="xs:string"/>
        <xs:attribute name="createMissingPackageInfoClass" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="junitTask">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="test">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="methods" type="xs:string"/>
                    <xs:attribute name="fork" type="xs:string"/>
                    <xs:attribute name="haltonerror" type="xs:string"/>
                    <xs:attribute name="errorproperty" type="xs:string"/>
                    <xs:attribute name="haltonfailure" type="xs:string"/>
                    <xs:attribute name="failureproperty" type="xs:string"/>
                    <xs:attribute name="filtertrace" type="xs:string"/>
                    <xs:attribute name="todir" type="xs:string"/>
                    <xs:attribute name="outfile" type="xs:string"/>
                    <xs:attribute name="if" type="xs:string"/>
                    <xs:attribute name="unless" type="xs:string"/>
                    <xs:attribute name="skipNonTests" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="syspropertyset" type="tns:propertySet"/>
            <xs:element name="formatter">
                <xs:complexType>
                    <xs:attribute name="type" type="xs:string"/>
                    <xs:attribute name="classname" type="xs:string"/>
                    <xs:attribute name="extension" type="xs:string"/>
                    <xs:attribute name="usefile" type="xs:string"/>
                    <xs:attribute name="if" type="xs:string"/>
                    <xs:attribute name="unless" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="jvmarg" type="tns:jvmarg"/>
            <xs:any namespace="##any" processContents="lax"/>
        </xs:choice>
        <xs:attribute name="printsummary" type="xs:string"/>
        <xs:attribute name="fork" type="xs:string"/>
        <xs:attribute name="forkmode" type="xs:string"/>
        <xs:attribute name="haltonerror" type="xs:string"/>
        <xs:attribute name="errorproperty" type="xs:string"/>
        <xs:attribute name="haltonfailure" type="xs:string"/>
        <xs:attribute name="failureproperty" type="xs:string"/>
        <xs:attribute name="filtertrace" type="xs:string"/>
        <xs:attribute name="timeout" type="xs:string"/>
        <xs:attribute name="maxmemory" type="xs:string"/>
        <xs:attribute name="jvm" type="xs:string"/>
        <xs:attribute name="dir" type="xs:string"/>
        <xs:attribute name="newenvironment" type="xs:string"/>
        <xs:attribute name="includeantruntime" type="xs:string"/>
        <xs:attribute name="showoutput" type="xs:string"/>
        <xs:attribute name="outputtoformatters" type="xs:string"/>
        <xs:attribute name="tempdir" type="xs:string"/>
        <xs:attribute name="reloading" type="xs:string"/>
        <xs:attribute name="clonevm" type="xs:string"/>
        <xs:attribute name="logfailedtests" type="xs:string"/>
        <xs:attribute name="enableTestListenerEvents" type="xs:string"/>
        <xs:attribute name="threads" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="lengthTask">
        <xs:complexContent>
            <xs:extension base="tns:length">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="tns:resourceCollections"/>
                </xs:sequence>
                <xs:attribute name="property" type="xs:string"/>
                <xs:attribute name="mode" type="xs:string"/>
                <xs:attribute name="length" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="macrodefTask">
        <xs:sequence>
            <xs:element name="attribute" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="default" type="xs:string"/>
                    <xs:attribute name="description" type="xs:string"/>
                    <xs:attribute name="doubleexpanding" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="element" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="optional" type="xs:string"/>
                    <xs:attribute name="implicit" type="xs:string"/>
                    <xs:attribute name="description" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="sequential">
                <xs:complexType>
                    <xs:choice maxOccurs="unbounded">
                        <xs:group ref="tns:tasks"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="uri" type="xs:anyURI"/>
        <xs:attribute name="description" type="xs:string"/>
        <xs:attribute name="backtrace" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="manifestTask">
        <xs:complexContent>
            <xs:extension base="tns:manifest">
                <xs:attribute name="file" type="xs:string" use="required"/>
                <xs:attribute name="mode" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="mkdirTask">
        <xs:attribute name="dir" use="required"/>
    </xs:complexType>

    
    <xs:complexType name="pathconvertTask">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="path">
                <xs:complexType>
                    <xs:attribute name="path" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="chainedmapper" type="tns:chainedmapper"/>
            <xs:element name="map">
                <xs:complexType>
                    <xs:attribute name="from" type="xs:string" use="required"/>
                    <xs:attribute name="to" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="dirset">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="include">
                            <xs:complexType>
                                <xs:attribute name="name" type="xs:string"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="dir" type="xs:string" use="required"/>
                    <xs:attribute name="includes" type="xs:string"/>
                    <xs:attribute name="includesfile" type="xs:string"/>
                    <xs:attribute name="excludes" type="xs:string"/>
                    <xs:attribute name="excludesfile" type="xs:string"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                    <xs:attribute name="followsymlinks" type="xs:string"/>
                    <xs:attribute name="erroronmissingdir" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
        <xs:attribute name="targetos" type="xs:string"/>
        <xs:attribute name="dirsep" type="xs:string"/>
        <xs:attribute name="pathsep" type="xs:string"/>
        <xs:attribute name="property" type="xs:string"/>
        <xs:attribute name="refid" type="xs:string"/>
        <xs:attribute name="setonempty" type="xs:string"/>
        <xs:attribute name="preserveduplicates" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="propertyTask">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="location" type="xs:string"/>
        <xs:attribute name="refid" type="xs:string"/>
        <xs:attribute name="resource" type="xs:string"/>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="url" type="xs:string"/>
        <xs:attribute name="environment" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="prefix" type="xs:string"/>
        <xs:attribute name="prefixValues" type="xs:string"/>
        <xs:attribute name="relative" type="xs:string"/>
        <xs:attribute name="basedir" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="propertyfileTask">
        <xs:sequence>
            <xs:element name="entry">
                <xs:complexType>
                    <xs:attribute name="key" type="xs:string" use="required"/>
                    <xs:attribute name="value" type="xs:string"/>
                    <xs:attribute name="default" type="xs:string"/>
                    <xs:attribute name="type" type="xs:string"/>
                    <xs:attribute name="operation" type="xs:string"/>
                    <xs:attribute name="pattern" type="xs:string"/>
                    <xs:attribute name="unit" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="file" type="xs:string" use="required"/>
        <xs:attribute name="comment" type="xs:string"/>
        <xs:attribute name="jdkproperties" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="tempfileTask">
        <xs:attribute name="property" type="xs:string" use="required"/>
        <xs:attribute name="destdir" type="xs:string"/>
        <xs:attribute name="prefix" type="xs:string"/>
        <xs:attribute name="suffix" type="xs:string"/>
        <xs:attribute name="deleteonexit" type="xs:string"/>
        <xs:attribute name="createfile" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="touchTask">
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="millis" type="xs:string"/>
        <xs:attribute name="datetime" type="xs:string"/>
        <xs:attribute name="pattern" type="xs:string"/>
        <xs:attribute name="mkdirs" type="xs:string"/>
        <xs:attribute name="verbose" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="typedefTask">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="classname" type="xs:string"/>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="resource" type="xs:string"/>
        <xs:attribute name="format" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="loaderRef" type="xs:string"/>
        <xs:attribute name="onerror" type="xs:string"/>
        <xs:attribute name="adapter" type="xs:string"/>
        <xs:attribute name="adaptto" type="xs:string"/>
        <xs:attribute name="uri" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="antversion">
        <xs:attribute name="atleast" type="xs:string"/>
        <xs:attribute name="exactly" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="available">
        <xs:attribute name="classname" type="xs:string"/>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="resource" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="filepath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="ignoresystemclasses" type="xs:string"/>
        <xs:attribute name="searchparents" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="chainedmapper">
        <xs:sequence>
            <xs:element name="flattenmapper">
                <xs:complexType/>
            </xs:element>
            <xs:element name="filtermapper">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="replacestring">
                            <xs:complexType>
                                <xs:attribute name="from" use="required"/>
                                <xs:attribute name="to" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="globmapper">
                <xs:complexType>
                    <xs:attribute name="from" use="required"/>
                    <xs:attribute name="to" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="files">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="tns:patterns"/>
            <xs:group ref="tns:selectors"/>
            <xs:element name="patternset">
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:group ref="tns:patterns"/>
                    </xs:sequence>
                    <xs:attribute name="id" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="tns:patternAttributes"/>
        <xs:attribute name="defaultexcludes" type="xs:string"/>
        <xs:attribute name="casesensitive" type="xs:string"/>
        <xs:attribute name="followsymlinks" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="jvmarg">
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="path" type="xs:string"/>
        <xs:attribute name="pathref" type="xs:string"/>
        <xs:attribute name="line" type="xs:string"/>
        <xs:attribute name="prefix" type="xs:string"/>
        <xs:attribute name="suffix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="length">
        <xs:attribute name="file" type="xs:string"/>
        <xs:attribute name="resource" type="xs:string"/>
        <xs:attribute name="string" type="xs:string"/>
        <xs:attribute name="trim" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="manifest">
        <xs:sequence>
            <xs:element name="attribute">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="encoding" type="xs:string"/>
        <xs:attribute name="mergeClassPathAttributes" type="xs:string"/>
        <xs:attribute name="unless" type="xs:string"/>
        <xs:attribute name="flattenAttributes" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="mapper">
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="classname" type="xs:string"/>
        <xs:attribute name="classpath" type="xs:string"/>
        <xs:attribute name="classpathref" type="xs:string"/>
        <xs:attribute name="from" type="xs:string"/>
        <xs:attribute name="to" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="propertySet">
        <xs:sequence>
            <xs:element name="propertyref" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string"/>
                    <xs:attribute name="prefix" type="xs:string"/>
                    <xs:attribute name="regex" type="xs:string"/>
                    <xs:attribute name="builtin" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="mapper" type="tns:mapper"/>
        </xs:sequence>
        <xs:attribute name="dynamic" type="xs:string"/>
        <xs:attribute name="negate" type="xs:string"/>
    </xs:complexType>

    <xs:attributeGroup name="patternAttributes">
        <xs:attribute name="includes" type="xs:string"/>
        <xs:attribute name="includesfile" type="xs:string"/>
        <xs:attribute name="excludes" type="xs:string"/>
        <xs:attribute name="excludesfile" type="xs:string"/>
    </xs:attributeGroup>

    <xs:group name="conditions">
        <xs:choice>
            <xs:element name="not">
                <xs:complexType>
                    <xs:group ref="tns:conditions"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="and">
                <xs:complexType>
                    <xs:choice minOccurs="2" maxOccurs="unbounded">
                        <xs:group ref="tns:conditions"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="or">
                <xs:complexType>
                    <xs:choice minOccurs="2" maxOccurs="unbounded">
                        <xs:group ref="tns:conditions"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="xor">
                <xs:complexType>
                    <xs:choice minOccurs="2" maxOccurs="unbounded">
                        <xs:group ref="tns:conditions"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="available" type="tns:available"/>
            <!--<xs:element name="uptodate" type="tns:uptodateTask"/>-->
            <xs:element name="os">
                <xs:complexType>
                    <xs:attribute name="family" type="xs:string"/>
                    <xs:attribute name="name" type="xs:string"/>
                    <xs:attribute name="arch" type="xs:string"/>
                    <xs:attribute name="version" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="equals">
                <xs:complexType>
                    <xs:attribute name="arg1" type="xs:string" use="required"/>
                    <xs:attribute name="arg2" type="xs:string" use="required"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                    <xs:attribute name="trim" type="xs:string"/>
                    <xs:attribute name="forcestring" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="isset">
                <xs:complexType>
                    <xs:attribute name="property" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="checksum" type="tns:checksumTask"/>
            <xs:element name="http">
                <xs:complexType>
                    <xs:attribute name="url" type="xs:string" use="required"/>
                    <xs:attribute name="errorsBeginAt" type="xs:string"/>
                    <xs:attribute name="requestMethod" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="socket">
                <xs:complexType>
                    <xs:attribute name="server" type="xs:string" use="required"/>
                    <xs:attribute name="port" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="filesmatch">
                <xs:complexType>
                    <xs:attribute name="file1" type="xs:string" use="required"/>
                    <xs:attribute name="file2" type="xs:string" use="required"/>
                    <xs:attribute name="textfile" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="contains">
                <xs:complexType>
                    <xs:attribute name="string"  type="xs:string" use="required"/>
                    <xs:attribute name="substring"  type="xs:string" use="required"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="istrue">
                <xs:complexType>
                    <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="isfalse">
                <xs:complexType>
                    <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="isreference">
                <xs:complexType>
                    <xs:attribute name="refid" type="xs:string" use="required"/>
                    <xs:attribute name="type" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="issigned">
                <xs:complexType>
                    <xs:attribute name="file" type="xs:string" use="required"/>
                    <xs:attribute name="name" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <!--            <xs:element name="isfileselected">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="selector" type="tns:selector"/>
                    </xs:sequence>
                    <xs:attribute name="file" type="xs:string" use="required"/>
                    <xs:attribute name="basedir" type="xs:string"/>
                </xs:complexType>
            </xs:element>-->
            <xs:element name="typefound">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="uri" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <!--            <xs:element name="scriptcondition">
                <xs:complexType>
                    <xs:attribute name="language" type="xs:string" use="required"/>
                    <xs:attribute name="manager" type="xs:string"/>
                    <xs:attribute name="value" type="xs:string"/>
                    <xs:attribute name="src" type="xs:string"/>
                    <xs:attribute name="setbeans" type="xs:string"/>
                    <xs:attribute name="classpath" type="xs:string"/>
                    <xs:attribute name="classpathref" type="xs:string"/>
                </xs:complexType>
            </xs:element>-->
            <xs:element name="parsersupports">
                <xs:complexType>
                    <xs:attribute name="property" type="xs:string"/>
                    <xs:attribute name="feature" type="xs:string"/>
                    <xs:attribute name="value" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="isreachable">
                <xs:complexType>
                    <xs:attribute name="host" type="xs:string"/>
                    <xs:attribute name="url" type="xs:string"/>
                    <xs:attribute name="timeout" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="length">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="tns:length">
                            <xs:attribute name="length" type="xs:string" use="required"/>
                            <xs:attribute name="when" type="xs:string"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="isfailure">
                <xs:complexType>
                    <xs:attribute name="code" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <!--<xs:element name="resourcecount" type="tns:resourcecountTask"/>-->
            <!--            <xs:element name="resourcesmatch">
                <xs:complexType>
                    <xs:sequence>
                        <xs:group ref="resourceCollections"/>
                    </xs:sequence>
                    <xs:attribute name="astext" type="xs:string"/>
                </xs:complexType>
            </xs:element>-->
            <xs:element name="resourcecontains">
                <xs:complexType>
                    <xs:attribute name="resource" type="xs:string"/>
                    <xs:attribute name="refid" type="xs:string"/>
                    <xs:attribute name="substring" type="xs:string" use="required"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="hasmethod">
                <xs:complexType>
                    <xs:attribute name="classname" type="xs:string" use="required"/>
                    <xs:attribute name="field" type="xs:string"/>
                    <xs:attribute name="method" type="xs:string"/>
                    <xs:attribute name="ignoreSystemClasses" type="xs:string"/>
                    <xs:attribute name="classpath" type="xs:string"/>
                    <xs:attribute name="classpathref" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="matches">
                <xs:complexType>
                    <!--                    <xs:sequence>
                        <xs:element name="regexp" type="tns:regexp"/>
                    </xs:sequence>-->
                    <xs:attribute name="string" type="xs:string" use="required"/>
                    <xs:attribute name="pattern" type="xs:string"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                    <xs:attribute name="multiline" type="xs:string"/>
                    <xs:attribute name="singleline" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="antversion" type="tns:antversion"/>
            <xs:element name="hasfreespace">
                <xs:complexType>
                    <xs:attribute name="partition" type="xs:string" use="required"/>
                    <xs:attribute name="needed" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
            <!--            <xs:element name="islastmodified">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="???" type="tns:resourceCollections"/>
                    </xs:sequence>
                    <xs:attribute name="millis" type="xs:string"/>
                    <xs:attribute name="datetime" type="xs:string"/>
                    <xs:attribute name="pattern" type="xs:string"/>
                    <xs:attribute name="mode" type="xs:string"/>
                </xs:complexType>
            </xs:element>-->
            <!--            <xs:element name="resourceexists">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="???" type="tns:resourceCollections"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>-->
        </xs:choice>
    </xs:group>

    <xs:group name="patterns">
        <xs:choice>
            <xs:element name="include">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="if" type="xs:string"/>
                    <xs:attribute name="unless" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="exclude">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                    <xs:attribute name="if" type="xs:string"/>
                    <xs:attribute name="unless" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
                            
    <xs:group name="resourceCollections">
        <xs:choice>
            <xs:group ref="tns:resources"/>
            <xs:element name="fileset">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="tns:files">
                            <xs:attribute name="dir" type="xs:string"/>
                            <xs:attribute name="file" type="xs:string"/>
                            <xs:attribute name="erroronmissingdir" type="xs:string"/>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="files" type="tns:files"/>
            <xs:element name="first">
                <xs:complexType>
                    <xs:group ref="tns:resourceCollections"/>
                    <xs:attribute name="count" type="xs:string"/>
                    <xs:attribute name="cache" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="resources">
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:group ref="tns:resources"/>
                    </xs:sequence>
                    <xs:attribute name="cache" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="resources">
        <xs:choice>
            <xs:element name="file">
                <xs:complexType>
                    <xs:attribute name="file" type="xs:string" use="required"/>
                    <xs:attribute name="basedir" type="xs:string"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="url">
                <xs:complexType>
                    <xs:attribute name="url" type="xs:string"/>
                    <xs:attribute name="file" type="xs:string"/>
                    <xs:attribute name="baseUrl" type="xs:string"/>
                    <xs:attribute name="relativePath" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="selectors">
        <xs:choice>
            <xs:element name="filename">
                <xs:complexType>
                    <xs:attribute name="name" type="xs:string"/>
                    <xs:attribute name="regex" type="xs:string"/>
                    <xs:attribute name="casesensitive" type="xs:string"/>
                    <xs:attribute name="negate" type="xs:string"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="tasks">
        <xs:choice>
            <xs:element name="ant" type="tns:antTask"/>
            <xs:element name="antcall" type="tns:antcallTask"/>
            <xs:element name="available" type="tns:availableTask"/>
            <xs:element name="basename" type="tns:basenameTask"/>
            <xs:element name="checksum" type="tns:checksumTask"/>
            <xs:element name="condition" type="tns:conditionTask"/>
            <xs:element name="copy" type="tns:copyTask"/>
            <xs:element name="delete" type="tns:deleteTask"/>
            <xs:element name="dirname" type="tns:dirnameTask"/>
            <xs:element name="echo" type="tns:echoTask"/>
            <xs:element name="fail" type="tns:failTask"/>
            <xs:element name="jar" type="tns:jarTask"/>
            <xs:element name="java" type="tns:javaTask"/>
            <xs:element name="javac" type="tns:javacTask"/>
            <xs:element name="junit" type="tns:junitTask"/>
            <xs:element name="length" type="tns:lengthTask"/>
            <xs:element name="macrodef" type="tns:macrodefTask"/>
            <xs:element name="manifest" type="tns:manifestTask"/>
            <xs:element name="mkdir" type="tns:mkdirTask"/>
            <xs:element name="pathconvert" type="tns:pathconvertTask"/>
            <xs:element name="property" type="tns:propertyTask"/>
            <xs:element name="propertyfile" type="tns:propertyfileTask"/>
            <xs:element name="taskdef" type="tns:typedefTask"/>
            <xs:element name="tempfile" type="tns:tempfileTask"/>
            <xs:element name="touch" type="tns:touchTask"/>
            <xs:any namespace="##other" processContents="lax" />
        </xs:choice>
    </xs:group>

</xs:schema>
